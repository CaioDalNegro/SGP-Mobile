#include <WiFi.h>
#include <WebServer.h>
#include <ArduinoJson.h>  // Biblioteca para trabalhar com JSON

// Defina as credenciais do Wi-Fi
const char* ssid = "linksys";  // Substitua com o nome da sua rede Wi-Fi
const char* password = "";  // Substitua com a senha da sua rede Wi-Fi

// Crie uma instância do servidor web
WebServer server(80);

// Função para simular o acionamento de LED com base no tipo de cor
void handleLED() {
  // Definir o cabeçalho CORS
  server.sendHeader("Access-Control-Allow-Origin", "*");  // Permitir todas as origens
  
  // Verifica se o corpo da requisição está presente
  if (server.hasArg("plain")) {
    String body = server.arg("plain");
    
    // Cria um objeto JSON para deserializar o corpo
    DynamicJsonDocument doc(1024);
    
    // Tenta deserializar o JSON
    DeserializationError error = deserializeJson(doc, body);

    // Verifica se houve erro ao deserializar o JSON
    if (error) {
      server.send(400, "application/json", "{\"status\":\"Erro no JSON enviado!\"}");
      return;
    }

    // Obtém o valor do parâmetro 'tipo' enviado no JSON
    String cor = doc["tipo"];

    // Verifica se a cor é válida
    if (cor == "verde" || cor == "azul") {
      // Aqui você pode realizar a ação com base na cor (simulação, no caso)
      Serial.println("Ação: " + cor);  // Exibe no monitor serial a cor acionada
      server.send(200, "application/json", "{\"status\":\"Ação " + cor + " acionada!\"}");
    } else {
      server.send(400, "application/json", "{\"status\":\"Cor inválida.\"}");
    }
  } else {
    server.send(400, "application/json", "{\"status\":\"Parâmetro tipo ausente.\"}");
  }
}

void setup() {
  // Inicializar a porta serial e conectar-se ao Wi-Fi
  Serial.begin(9600);
  WiFi.begin(ssid, password);
  
  // Esperar pela conexão Wi-Fi
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando ao WiFi...");
  }
  
  // Imprimir IP do ESP32
  Serial.println("Conectado ao WiFi");
  Serial.print("IP do ESP32: ");
  Serial.println(WiFi.localIP());

  // Rota para o comando LED
  server.on("/led", HTTP_POST, handleLED);
  
  // Iniciar o servidor
  server.begin();
}

void loop() {
  server.handleClient(); // Manipular requisições HTTP
}
